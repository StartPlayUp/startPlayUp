Index: frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState, useContext } from 'react';\nimport WebHeader from './webHeader';\nimport FOOTER from \"./webFooter\";\nimport { useLocation } from 'react-router-dom';\n//import ChatComponent from '../../ChatFrame/frontend/src/Component/ChatComponent'\n//import {Store} from '../../ChatFrame/frontend/src/store'\nimport {\n    BodyFrame,\n    Button,\n    ButtonArea,\n    ChattingList,\n    MainList,\n    Room,\n    Title,\n    TitleSpan,\n    UserList,\n    LeftButtonsArea,\n    RightButtonsArea, WaitingUsers\n} from \"../Style/WaitingRoomStyle\";\nimport ChatComponent from \"../../../ChatComponent\";\nimport { PeersContext, PeerDataContext, RoomIdContext } from \"../../../../Routes/peerStore\";\nimport { useHistory } from \"react-router\";\nimport axios from \"axios\";\nimport { Background, Users } from \"../Style/WebFrameStyle\";\nimport PlayerList from \"./PlayerList\";\nimport { sendDataToPeers } from \"Common/peerModule/sendToPeers\"\nimport { GAME_START_SIGN } from 'Constants/peerDataTypes';\n\nconst Yutnori = 'Yutnori'\nconst AVALON = 'AVALON'\nconst YACHT ='YATCH'\nconst MINE_SEARCH = 'MINE_SEARCH'\n\nconst WaitingRoom = ({ chatList, chatShow, setChatList }) => {\n    const location = useLocation();\n    const gameType = location.state.gameType\n    const roomTitle = location.state.roomTitle\n    const hostname = location.state.hostname\n    // const guests = location.list.guestList;\n    const { roomID, setRoomID } = useContext(RoomIdContext);\n    const { peers } = useContext(PeersContext);\n    const { peerData } = useContext(PeerDataContext);\n    const history = useHistory()\n    const gameTypeChecker=()=>{\n        switch (gameType) {\n            case Yutnori:\n                history.push({\n                    pathname: \"/YUT\",\n                    state: {\n                        roomTitle: roomTitle,\n                        gameType: gameType,\n                        hostname,\n                    },\n                });\n                break;\n            case YACHT:\n                history.push('/Yacht');\n                break;\n            case AVALON:\n                history.push('/AVALON');\n                break;\n            case MINE_SEARCH:\n                history.push('/MineSearch');\n                break;\n            default:\n                alert('error');\n        }\n    }\n    const gameStart = () => {\n        console.log(gameType);\n        sendDataToPeers(GAME_START_SIGN, {\n            game: null,\n            nickname: localStorage.getItem('nickname'),\n            peers,\n            data: null,\n        });\n        console.log(\"waiting room hostname : \", hostname)\n        gameTypeChecker()\n    }\n\n    const [user, setUsers] = useState([]);\n    useEffect(() => {\n        axios.post('http://localhost:4000/api/room/accessRoom')\n            .then(function (result) {\n                console.log('checkUser get useEffect')\n                const { userList, success } = result.data\n                success && setUsers(userList)\n            })\n            .catch(function (error) {\n                console.error('error : ', error)\n            });\n    }, [])\n\n    useEffect(() => {\n        if (peerData.type === GAME_START_SIGN) {\n            console.log(\"waiting room hostname : \", hostname)\n            gameTypeChecker()\n        }\n    }, [peerData])\n\n    return (\n        <BodyFrame>\n            <Background />\n            <Room>\n                <Title>\n                    <TitleSpan fontSize={\"18px\"} color={\"red\"}>{gameType}</TitleSpan>\n                    <TitleSpan fontSize={\"22px\"} color={\"black\"}>{roomTitle}</TitleSpan>\n                </Title>\n                <hr />\n                <ButtonArea>\n                    <LeftButtonsArea>\n                        <Button onClick={gameStart}>시작</Button>\n                        <Button>준비</Button>\n                    </LeftButtonsArea>\n                    <RightButtonsArea>\n                        <Button margin={'0'} onClick={() => {\n                            setRoomID({ ...roomID, id: \"\", state: false });\n                            history.push('/main')\n                        }}>나가기</Button>\n                    </RightButtonsArea>\n                </ButtonArea>\n                <MainList>\n                    <WaitingUsers>\n                        <PlayerList />\n                    </WaitingUsers>\n                    <ChattingList>\n                        {chatShow && (\n                            <ChatComponent\n                                chatList={chatList}\n                                setChatList={setChatList}\n                            />\n                        )}\n                    </ChattingList>\n                </MainList>\n            </Room>\n        </BodyFrame>\n    );\n}\nexport default WaitingRoom;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js	(revision 2c3d2c19daa40949f5bd556b28192137030ea2d0)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js	(date 1632713624212)
@@ -1,7 +1,7 @@
-import React, { useEffect, useState, useContext } from 'react';
+import React, {useEffect, useState, useContext} from 'react';
 import WebHeader from './webHeader';
 import FOOTER from "./webFooter";
-import { useLocation } from 'react-router-dom';
+import {useLocation} from 'react-router-dom';
 //import ChatComponent from '../../ChatFrame/frontend/src/Component/ChatComponent'
 //import {Store} from '../../ChatFrame/frontend/src/store'
 import {
@@ -18,30 +18,31 @@
     RightButtonsArea, WaitingUsers
 } from "../Style/WaitingRoomStyle";
 import ChatComponent from "../../../ChatComponent";
-import { PeersContext, PeerDataContext, RoomIdContext } from "../../../../Routes/peerStore";
-import { useHistory } from "react-router";
+import {PeersContext, PeerDataContext, RoomIdContext} from "../../../../Routes/peerStore";
+import {useHistory} from "react-router";
 import axios from "axios";
-import { Background, Users } from "../Style/WebFrameStyle";
+import {Background, Users} from "../Style/WebFrameStyle";
 import PlayerList from "./PlayerList";
-import { sendDataToPeers } from "Common/peerModule/sendToPeers"
-import { GAME_START_SIGN } from 'Constants/peerDataTypes';
+import {sendDataToPeers} from "Common/peerModule/sendToPeers"
+import {GAME_START_SIGN} from 'Constants/peerDataTypes';
 
 const Yutnori = 'Yutnori'
 const AVALON = 'AVALON'
-const YACHT ='YATCH'
+const YACHT = 'YATCH'
 const MINE_SEARCH = 'MINE_SEARCH'
 
-const WaitingRoom = ({ chatList, chatShow, setChatList }) => {
+const WaitingRoom = ({chatList, chatShow, setChatList}) => {
     const location = useLocation();
     const gameType = location.state.gameType
     const roomTitle = location.state.roomTitle
     const hostname = location.state.hostname
-    // const guests = location.list.guestList;
-    const { roomID, setRoomID } = useContext(RoomIdContext);
-    const { peers } = useContext(PeersContext);
-    const { peerData } = useContext(PeerDataContext);
+    const guestList = location.state.guestList
+    const [players, setPlayers] = useState([])
+    const {roomID, setRoomID} = useContext(RoomIdContext);
+    const {peers} = useContext(PeersContext);
+    const {peerData} = useContext(PeerDataContext);
     const history = useHistory()
-    const gameTypeChecker=()=>{
+    const gameTypeChecker = () => {
         switch (gameType) {
             case Yutnori:
                 history.push({
@@ -77,36 +78,46 @@
         console.log("waiting room hostname : ", hostname)
         gameTypeChecker()
     }
-
-    const [user, setUsers] = useState([]);
-    useEffect(() => {
-        axios.post('http://localhost:4000/api/room/accessRoom')
-            .then(function (result) {
-                console.log('checkUser get useEffect')
-                const { userList, success } = result.data
-                success && setUsers(userList)
-            })
-            .catch(function (error) {
-                console.error('error : ', error)
-            });
+    useEffect(async (roomID) => {
+        const getRoomConfig = {
+            method: 'post',
+            url: 'http://localhost:4000/api/room/getRoom',
+            data: {
+                roomID,
+            }
+        }
+        try {
+            const roomObject = await axios(getRoomConfig);
+            console.log('roomObject')
+            console.log(roomObject.data)
+            setPlayers(roomObject.data)
+            return roomObject.data;
+        } catch (error) {
+            console.error(error)
+            return {}
+        }
     }, [])
 
+    //게임 시작 버튼
     useEffect(() => {
         if (peerData.type === GAME_START_SIGN) {
             console.log("waiting room hostname : ", hostname)
             gameTypeChecker()
         }
     }, [peerData])
-
+    console.log(guestList)
+    useEffect(()=>{
+            console.log(guestList)
+    },guestList)
     return (
         <BodyFrame>
-            <Background />
+            <Background/>
             <Room>
                 <Title>
                     <TitleSpan fontSize={"18px"} color={"red"}>{gameType}</TitleSpan>
                     <TitleSpan fontSize={"22px"} color={"black"}>{roomTitle}</TitleSpan>
                 </Title>
-                <hr />
+                <hr/>
                 <ButtonArea>
                     <LeftButtonsArea>
                         <Button onClick={gameStart}>시작</Button>
@@ -114,14 +125,18 @@
                     </LeftButtonsArea>
                     <RightButtonsArea>
                         <Button margin={'0'} onClick={() => {
-                            setRoomID({ ...roomID, id: "", state: false });
+                            setRoomID({...roomID, id: "", state: false});
                             history.push('/main')
                         }}>나가기</Button>
                     </RightButtonsArea>
                 </ButtonArea>
                 <MainList>
                     <WaitingUsers>
-                        <PlayerList />
+                        {guestList.map((user,index)=>(
+                            <UserList key={index}>
+                                <Users>{user}</Users>
+                            </UserList>
+                        ))}
                     </WaitingUsers>
                     <ChattingList>
                         {chatShow && (
@@ -136,4 +151,24 @@
         </BodyFrame>
     );
 }
-export default WaitingRoom;
\ No newline at end of file
+export default WaitingRoom;
+
+// useEffect(async (roomID) => {
+//     const getRoomConfig = {
+//         method: 'post',
+//         url: 'http://localhost:4000/api/room/getRoom',
+//         data: {
+//             roomID,
+//         }
+//     }
+//     try {
+//         const roomObject = await axios(getRoomConfig);
+//         console.log('roomObject')
+//         console.log(roomObject)
+//         setPlayers(roomObject)
+//         return roomObject.data;
+//     } catch (error) {
+//         console.error(error)
+//         return {}
+//     }
+// },[])
\ No newline at end of file
Index: frontend/src/Component/WebComponent/WebPage/WebFrame/PlayerList.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect} from \"react\";\nimport * as S from '../Style/WebFrameStyle'\nimport axios from \"axios\";\nimport {useLocation} from \"react-router\";\nconst PlayerList=()=>{\n    const location = useLocation()\n    const room = location.state.room\n    console.log(`room : ${room}`)\n    useEffect(() => {\n        const getUserConfig = {\n            method: 'get',\n            url: `http://localhost:4000/api/user/getUser?email=${room.email}`,\n        }\n        axios(getUserConfig)\n            .then(function (response) {\n                console.log(`해당 이메일로 가입한 사용자 데이터 가져오기: ${room.email} : `, response.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    },[])\n    return(\n        room.guestList.map((user, index)=>(\n            <S.UserList>\n                <S.Users width={'5vw'}>{`${index+1} : ${user.substring(0,user.indexOf(' '))}`}</S.Users>\n            </S.UserList>\n        ))\n    )\n}\nexport default PlayerList
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/PlayerList.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/PlayerList.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/PlayerList.js	(revision 2c3d2c19daa40949f5bd556b28192137030ea2d0)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/PlayerList.js	(date 1632705662183)
@@ -1,28 +1,31 @@
-import React, {useEffect} from "react";
+import React, {useEffect, useState} from "react";
 import * as S from '../Style/WebFrameStyle'
 import axios from "axios";
 import {useLocation} from "react-router";
-const PlayerList=()=>{
-    const location = useLocation()
-    const room = location.state.room
-    console.log(`room : ${room}`)
-    useEffect(() => {
-        const getUserConfig = {
-            method: 'get',
-            url: `http://localhost:4000/api/user/getUser?email=${room.email}`,
+
+const PlayerList = ({roomId}) => {
+    const [users,setUsers] = useState([])
+    const nickname = localStorage.getItem('nickname')
+    useEffect(async ({roomId}) => {
+        const getRoomConfig = {
+            method: 'post',
+            url: 'http://localhost:4000/api/room/getRoom',
+            data: {
+                roomId,
+            }
         }
-        axios(getUserConfig)
-            .then(function (response) {
-                console.log(`해당 이메일로 가입한 사용자 데이터 가져오기: ${room.email} : `, response.data);
-            })
-            .catch(function (error) {
-                console.log(error);
-            });
+        try {
+            const roomObject = await axios(getRoomConfig);
+            return roomObject.data;
+        } catch (error) {
+            console.error(error)
+            return {}
+        }
     },[])
-    return(
-        room.guestList.map((user, index)=>(
+    return (
+        users.map((user, index) => (
             <S.UserList>
-                <S.Users width={'5vw'}>{`${index+1} : ${user.substring(0,user.indexOf(' '))}`}</S.Users>
+                <S.Users width={'5vw'}>{`${index + 1} : ${user.nickname.substring(0, user.indexOf(' '))}`}</S.Users>
             </S.UserList>
         ))
     )
Index: frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useContext, useEffect, useState} from \"react\";\nimport CreateButton from \"./CreateButton\";\n\nimport {\n    BodyFrame,\n    BodyCenter,\n    RoomFrame,\n    UserList,\n    Users,\n    ButtonArea,\n} from \"../Style/WebFrameStyle\";\nimport axios from \"axios\";\nimport {\n    Close,\n    Footer,\n    Input,\n    LoginMid,\n    LoginModal,\n    Modal,\n    ModalContents,\n    ResultButton,\n    Title\n} from \"../Style/CreateRoomStyle\";\nimport HEADER from \"./webHeader\";\nimport {RoomIdContext} from \"../../../../Routes/peerStore\";\n\nconst BODY = ({location, history}) => {\n    console.log(location);\n    console.log(history);\n\n    const [gameList, setGameList] = useState([]);\n    const [isSecret, setIsSecret] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [room, setRoom] = useState();\n    const {roomID, setRoomID} = useContext(RoomIdContext)\n    const historyPush = (room) => {\n        console.log('history.push rooms : ')\n        console.log(room)\n        setRoomID({id: room.roomId, state: true})\n        history.push({\n            pathname: \"/waitingRoom\",\n            state: {\n                room: room,\n                hostname: room.hostname,\n                gameType: room.gameType,\n                roomTitle: room.roomTitle,\n            },\n        });\n    };\n\n    const onClick = (rooms) => {\n        if (rooms.secret) {\n            setIsSecret(true);\n            setRoom(rooms);\n        } else {\n            console.log('onClick rooms')\n            console.log(rooms)\n            historyPush(rooms);\n        }\n    };\n\n    const passwordChecker = () => {\n        console.log(\"----------------------start\");\n        console.log(room);\n        console.log(room.hostname);\n        console.log(password);\n        console.log(`${password}`)\n        console.log('-------------------------------end')\n        accessRoom(room)\n    };\n    const accessRoom = (rooms) => {\n        console.log('accessRoom')\n        console.log(rooms.roomId, password)\n        const accessRoomConfig = {\n            method: 'post',\n            url: 'http://localhost:4000/api/room/accessRoom',\n            data: {\n                roomId: rooms.roomId,\n                password: password,\n            }\n        }\n        axios(accessRoomConfig)\n            .then(function (response) {\n                console.log(\"roomId and RoomPassword check : \", response.data);\n                if (response.data.success && response.data.correct) {\n                    historyPush(room)\n                } else {\n                    alert('error')\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    useEffect(() => {\n        axios\n            .post('http://localhost:4000/api/room/getRooms')\n            .then(function (result) {\n                console.log(\"getRooms post useEffect\");\n                const {roomList, success} = result.data;\n                success && setGameList(roomList);\n            })\n            .catch(function (error) {\n                console.error(\"error : \", error);\n            });\n    }, []);\n    return (\n        <>\n            {/*<HEADER/>*/}\n            <BodyFrame>\n                <BodyCenter>\n                    <ButtonArea>\n                        <CreateButton type={\"submit\"}/>\n                    </ButtonArea>\n                    <RoomFrame>\n                        <UserList background={\"white\"}>\n                            <Users width={\"5vw\"} align={\"center\"}>\n                                방 번호\n                            </Users>\n                            <Users width={\"15vw\"}>게임 이름</Users>\n                            <Users width={\"30vw\"}>방 제목</Users>\n                            <Users width={\"15vw\"}>방 사용자</Users>\n                            <Users width={\"5vw\"} align={\"center\"}>\n                                인원\n                            </Users>\n                        </UserList>\n                        {gameList.map(function (rooms, index) {\n                            return (\n                                <UserList\n                                    key={index}\n                                    background={\"#FFFFF3\"}\n                                    onClick={() => onClick(rooms, index)}\n                                >\n                                    <Users width={\"5vw\"} align={\"center\"}>\n                                        {index + 1}\n                                    </Users>\n                                    <Users width={\"15vw\"}>{rooms.gameType}</Users>\n                                    <Users width={\"30vw\"}>{`${rooms.roomTitle}  ${rooms.secret ? \"\uD83D\uDD10\" : \"\"\n                                    }`}</Users>\n                                    <Users width={\"15vw\"}>{rooms.hostname}</Users>\n                                    <Users width={\"5vw\"} align={\"center\"}>\n                                        {rooms.roomLimit}\n                                    </Users>\n                                </UserList>\n                            );\n                        })}\n                    </RoomFrame>\n                    {isSecret && (\n                        <Modal>\n                            <LoginMid>\n                                <LoginModal>\n                                    <Close onClick={() => setIsSecret(false)}>x</Close>\n                                    <ModalContents>\n                                        <Title size={'24px'}>StartPlayUp</Title>\n                                        <Title size={'32px'}>\uD83D\uDD10</Title>\n                                        <label>\n                                            <span>암호 : &nbsp; </span>\n                                            <Input\n                                                type=\"password\"\n                                                onChange={onPasswordChange}\n                                                placeholder={'암호를 입력하세요.'}\n                                                width={'200px'}\n                                            />\n                                        </label>\n                                    </ModalContents>\n                                    <Footer>\n                                        <ResultButton onClick={passwordChecker}>\n                                            확인\n                                        </ResultButton>\n                                    </Footer>\n                                </LoginModal>\n                            </LoginMid>\n                        </Modal>\n                    )}\n                </BodyCenter>\n            </BodyFrame>\n        </>\n    );\n};\n\nexport default BODY;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js	(revision 2c3d2c19daa40949f5bd556b28192137030ea2d0)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js	(date 1632708428945)
@@ -1,4 +1,4 @@
-import React, {useContext, useEffect, useState} from "react";
+import React, {createContext, useContext, useEffect, useState} from "react";
 import CreateButton from "./CreateButton";
 
 import {
@@ -32,6 +32,7 @@
     const [isSecret, setIsSecret] = useState(false);
     const [password, setPassword] = useState("");
     const [room, setRoom] = useState();
+
     const {roomID, setRoomID} = useContext(RoomIdContext)
     const historyPush = (room) => {
         console.log('history.push rooms : ')
@@ -40,7 +41,7 @@
         history.push({
             pathname: "/waitingRoom",
             state: {
-                room: room,
+                guestList: room.guestList,
                 hostname: room.hostname,
                 gameType: room.gameType,
                 roomTitle: room.roomTitle,
@@ -96,6 +97,7 @@
         setPassword(e.target.value);
     };
 
+    //메인 페이지 방들
     useEffect(() => {
         axios
             .post('http://localhost:4000/api/room/getRooms')
@@ -108,6 +110,7 @@
                 console.error("error : ", error);
             });
     }, []);
+
     return (
         <>
             {/*<HEADER/>*/}
Index: frontend/src/Component/GameComponent/AVALON_BETA/Styled.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import styled, { createGlobalStyle, keyframes } from \"styled-components\";\n\nexport const PageFrame = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  background: ${(props) => props.color};\n`;\nexport const Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  /* border: 5px solid black; */\n`;\nexport const VoteImage = styled.div`\n  display: flex;\n  margin: 5% 0 5% 0;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const Stage = styled.div`\n  display: flex;\n  width: 120px;\n  height: 120px;\n  border-radius: 100%;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  /* padding: 50px; */\n  margin: 20px;\n  border: 2px solid black;\n`;\nexport const MainVoteFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: 30%;\n`;\nexport const VoteFrame = styled.div`\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n`;\nexport const PlayerFrame = styled.div`\n  display: flex;\n  width: 30%;\n  flex-wrap: wrap;\n  align-items: center;\n  //margin-left: 10%;\n  //justify-content: space-evenly;\n  flex-direction: column;\n`;\nexport const Players = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  border: 3px solid black;\n  padding: 5px;\n`;\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n`;\nexport const StageFrame = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n// display: flex;\n// flex-direction: row;\n// flex-wrap: wrap;\n// border: 2px solid black;\n// margin: 15px;\n// border-radius: 70%;\n// padding: 60px;\n\nexport const RoleList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nexport const GameFrame = styled.div`\n  display: flex;\n  margin: 0 auto;\n  width: 70%;\n  flex-direction: column;\n  //justify-content: space-between;\n`;\nexport const GameState = styled.div`\n  display: flex;\n  width: 70%;\n  flex-direction: column;\n  border: 5px solid black;\n`;\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #FFFFF3;\n    background-image: url('https://www.transparenttextures.com/patterns/45-degree-fabric-light.png');\n  }\n\n  div {\n    color: black;\n  }\n`;\nexport const PlayerVote = styled.div`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n`;\nexport const PlayerVoteFrame = styled.form`\n  display: flex;\n  font-size: 32px;\n  justify-content: space-around;\n  padding: 30px;\n`;\nexport const RowFrame = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n  flex-wrap: nowrap;\n`;\nexport const VotePlayers = styled.div`\n  display: flex;\n  margin: 10%;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nexport const AgreeVotePlayers = styled.div`\n  display: flex;\n  width: 50%;\n  flex-direction: column;\n  justify-content: center;\n`;\nexport const OpposeVotePlayers = styled.div`\n  display: flex;\n  width: 50%;\n  flex-direction: column;\n  justify-content: center;\n`;\nexport const Timer = styled.div`\n  display: flex;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  justify-content: flex-start;\n  font-size: 32px;\n`;\nexport const PlayerVoteResult = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\nexport const ColumnFrame = styled.div`\n  /* display: flex; */\n  flex-wrap: wrap;\n  width: 100%;\n  height: 100%;\n  /* margin: 0 auto; */\n  flex-direction: column;\n  justify-content: center;\n`;\nexport const Circle = styled.div`\n  display: flex;\n  width: auto;\n  height: auto;\n  border-radius: 70%;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  margin-left: 15px;\n  border: 2px solid black;\n  background: ${(props) => props.color};\n`;\nexport const VoteStageFrame = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\nexport const User = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  border: 2px solid black;\n`;\nexport const Button = styled.button`\n  margin: 30% auto;\n  padding: 5px 36px 5px 36px;\n  font-size: 18px;\n  background-color: dimgray;\n  color: white;\n`;\nexport const SelectPlayer = styled.div`\n  flex: 1 1 auto;\n  margin: 0 auto;\n  flex-direction: row;\n  justify-content: space-between;\n`;\nexport const MainVote = styled.div`\n  display: flex;\n  margin-top: 10%;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const MainVoteLabel = styled.label`\n  font-size: 32px;\n  margin: 0 auto;\n`;\nexport const MainVoteCheckbox = styled.input`\n  width: 32px;\n  height: 32px;\n  margin: 16px;\n`;\nexport const PublicColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 85vw;\n  height: 90vh;\n`;\nexport const PublicRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 85vw;\n  height: 90vh;\n`;\nexport const MainVoteButton = styled.button`\n  width: 168px;\n  height: 48px;\n  background: #ff0000;\n  opacity: 0.7;\n  backdrop-filter: blur(4px);\n  font-size: 32px;\n  margin-top: 5%;\n  color: white;\n`;\nexport const MAIN_FRAME_STYLE = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nexport const MAIN_VOTE_HEADER = styled.div`\n  background-color: dimgray;\n  color: white;\n  text-align: center;\n  font-size: 48px;\n  padding: 10px;\n`;\nexport const VoteHeader = styled.div`\n  font-size: 28px;\n  margin: 0 auto;\n  padding: 32px;\n`;\nexport const PlayerList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\nexport const VoteTitle = styled.div`\n  flex: 1 1 auto;\n`;\nexport const SuccessImageToken = styled.img`\n  width: inherit;\n  height: inherit;\n  border-radius: 100%;\n  object-fit: fill;\n  background: url(\"/img/angelToken.png\");\n`;\nexport const FailImageToken = styled.img`\n  width: inherit;\n  height: inherit;\n  border-radius: 100%;\n  object-fit: none;\n  object-position: center;\n  background: url(\"/img/evilToken.png\");\n`;\n// export const Container = styled.div`\n//   position: fixed;\n//   top: 10;\n//   left: 10;\n//   width: 100%;\n//   height: 100%;\n//   background-color: #042813;\n//   background-image: url(\"https://www.transparenttextures.com/patterns/45-degree-fabric-light.png\");\n// `;\n\nconst Card = styled.div`\n  width: 250px;\n  height: 450px;\n`;\n\nexport const CardWrapper = styled(Card)`\n  /* position: fixed; */\n  top: 30%;\n  left: 30%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const PokerCard = styled(Card)`\n  position: absolute;\n  border-radius: 5px;\n  margin-left: 20px;\n  box-shadow: 4px 4px 5px 0px rgba(50, 50, 50, 0.75);\n`;\n\nexport const PokerBack = styled(PokerCard)`\n  //background-color: #ffffff;\n  //opacity: 0.8;\n  //background-color: #f3f3f4;\n  //opacity: 1;\n  background-image: linear-gradient(135deg, #a90c08 25%, transparent 25%),\n    linear-gradient(225deg, #a90c08 25%, transparent 25%),\n    linear-gradient(45deg, #a90c08 25%, transparent 25%),\n    linear-gradient(315deg, #a90c08 25%, #f3f3f4 25%);\n  background-position: 20px 0, 20px 0, 0 0, 0 0;\n  background-size: 20px 20px;\n  background-repeat: repeat;\n  border: 5px solid #fff;\n`;\n// Poker card in front-side\nexport const PokerFront = styled(PokerCard)`\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 5px;\n  background-color: #ffffff;\n`;\nexport const FrontImg = styled.img`\n  width: 100%;\n  height: 100%;\n`;\nexport const NicknameTag = styled.div`\n  font-size: 24px;\n  margin: 50px 0 0 100px;\n`;\nconst walking = keyframes`\n  to {\n    background-position: 100% 0;\n  }\n`;\n\nconst stroll = keyframes`\n  from {\n    transform: translateX(-200%);\n  }\n  to {\n    transform: translateX(200%);\n  }\n`;\n\nexport const WalkContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 20%;\n  padding-bottom: 30%;\n  vertical-align: middle;\n  overflow: hidden;\n  animation: ${stroll} 5s linear infinite;\n`;\nexport const SuccessImage = styled.button`\n  width: 200px;\n  height: 330px;\n  background: url(\"/img/success.png\");\n`;\nexport const FailImage = styled.button`\n  width: 200px;\n  height: 330px;\n  background: url(\"/img/fail.png\");\n`;\nexport const Walk = styled.div`\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/4273/walk-sequence.svg);\n  background-repeat: no-repeat;\n  background-size: 800%;\n  animation: ${walking} 1s infinite steps(7);\n`;\n\nexport const ButtonAnimation = createGlobalStyle`\n  body {\n  font-family: sans-serif;\n  text-align: center;\n\n  display: grid;\n  place-items: center;\n  width: 100vw;\n  height: 100vh;\n}\n\n.button {\n  padding: 16px 24px;\n  font-size: 21px;\n  border: none;\n  background: linear-gradient(135deg, blue 1%, red);\n  color: white;\n  border-radius: 4px;\n}\n.button:hover,\n.button:focus {\n  cursor: pointer;\n  border: none;\n  outline: none;\n}\n\n/* .button:active{\n  -moz-animation: buttonRotate 10ms linear 0s 50 normal none;\n  -webkit-animation: buttonRotate 10ms linear 0s 50 normal none;\n  animation: buttonRotate 10ms linear 0s 50 normal none;\n} */\n\n.animate {\n  -moz-animation: buttonRotate 10ms linear 0s 50 normal none;\n  -webkit-animation: buttonRotate 10ms linear 0s 50 normal none;\n  animation: buttonRotate 10ms linear 0s 50 normal none;\n}\n\n@keyframes buttonRotate {\n  0% {\n    transform: translate(-20px, 2px);\n  }\n  100% {\n    transform: translate(20px, -2px);\n  }\n}\n`;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/GameComponent/AVALON_BETA/Styled.js b/frontend/src/Component/GameComponent/AVALON_BETA/Styled.js
--- a/frontend/src/Component/GameComponent/AVALON_BETA/Styled.js	(revision 2c3d2c19daa40949f5bd556b28192137030ea2d0)
+++ b/frontend/src/Component/GameComponent/AVALON_BETA/Styled.js	(date 1632705211092)
@@ -362,7 +362,22 @@
     transform: translateX(200%);
   }
 `;
-
+export const ModalTitle = styled.div`
+  display: flex;
+  flex-direction: row;
+  justify-content: center;
+  font-size: 24px;
+  margin: 10px;
+`
+export const ModalColumn = styled.div`
+  flex-wrap: wrap;
+  width: 100%;
+  height: 100%;
+  /* margin: 0 auto; */
+  flex-direction: column;
+  justify-content: center;
+  align-items: center;
+`
 export const WalkContainer = styled.div`
   display: inline-block;
   position: relative;
Index: frontend/src/Component/WebComponent/WebPage/WebFrame/modules/UserInformationModal.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Modal from 'react-modal'\nimport React, {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nconst UserInformationModal = ({setOpen}) => {\n    const history = useHistory()\n    const onClick = () => {\n        setOpen(false)\n        history.push({\n            pathname: '/main'\n        })\n    }\n    return (\n        <Modal\n            isOpen={open}\n            style={{\n                overlay: {\n                    position: 'inherit',\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    backgroundColor: 'rgba(54, 54, 54, 0.75)',\n                    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\n                    zIndex: '99',\n                    transition: 'all 0.6 ease-in-out'\n                },\n                content: {\n                    display: 'flex',\n                    position: 'absolute',\n                    top: '15%',\n                    left: '60%',\n                    width: '20%',\n                    height: '30%',\n                    border: 'none',\n                    background: '#FFFFF3',\n                    overflow: 'auto',\n                    WebkitOverflowScrolling: 'touch',\n                    borderRadius: '15px',\n                    outline: 'none',\n                    padding: '20px',\n                    fontSize: '14sp',\n                    alignItems: 'left',\n                    flexDirection: 'column',\n                    color: 'black',\n                    transition: 'all 0.6 ease-in-out'\n                }\n            }}\n        >\n            <h3>사용자 정보</h3>\n            <p>닉네임 : oxix</p>\n            <p>게임 수 : 10</p>\n            <p>승 : </p>\n            <p>패 : </p>\n            <p>승률 : </p>\n            <h3 onClick={onClick}>\n                X\n            </h3>\n            <div>\n                ff\n            </div>\n        </Modal>\n    )\n}\nUserInformationModal.propTypes = {};\nexport default UserInformationModal
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/modules/UserInformationModal.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/modules/UserInformationModal.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/modules/UserInformationModal.js	(revision 2c3d2c19daa40949f5bd556b28192137030ea2d0)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/modules/UserInformationModal.js	(date 1632705309871)
@@ -1,21 +1,43 @@
 import Modal from 'react-modal'
-import React, {useState} from "react";
+import React, {useEffect, useState} from "react";
 import {useHistory} from "react-router-dom";
+import {Button} from "../../Style/WaitingRoomStyle";
+import * as S from '../../../../GameComponent/AVALON_BETA/Styled'
+import axios from "axios";
 
 const UserInformationModal = ({setOpen}) => {
     const history = useHistory()
+    const fullNickname = localStorage.getItem('nickname')
+    const nickname = fullNickname.substring(0, fullNickname.indexOf(' '))
+    const [information, setInformation] = useState([])
     const onClick = () => {
         setOpen(false)
         history.push({
             pathname: '/main'
         })
     }
+    useEffect(() => {
+        const getUserFromNicknameConfig = {
+            method: 'get',
+            url: `http://localhost:4000/api/user/getUserFromNickname?nickname=${nickname}`,
+        }
+        axios(getUserFromNicknameConfig)
+            .then(function (response) {
+                console.log(`해당 닉네임으로 가입한 사람 데이터 가져오기 : ${nickname} : `, response.data);
+                const userInfo = response.data.user;
+                setInformation(userInfo);
+            })
+            .catch(function (error) {
+                console.log(error);
+            });
+    }, [])
+    console.log('information : ' + information)
     return (
         <Modal
             isOpen={open}
             style={{
                 overlay: {
-                    position: 'inherit',
+                    position: 'flex',
                     top: 0,
                     left: 0,
                     right: 0,
@@ -31,8 +53,8 @@
                     top: '15%',
                     left: '60%',
                     width: '20%',
-                    height: '30%',
-                    border: 'none',
+                    height: '25%',
+                    border: '2px solid purple',
                     background: '#FFFFF3',
                     overflow: 'auto',
                     WebkitOverflowScrolling: 'touch',
@@ -47,18 +69,24 @@
                 }
             }}
         >
-            <h3>사용자 정보</h3>
-            <p>닉네임 : oxix</p>
-            <p>게임 수 : 10</p>
-            <p>승 : </p>
-            <p>패 : </p>
-            <p>승률 : </p>
-            <h3 onClick={onClick}>
-                X
-            </h3>
-            <div>
-                ff
-            </div>
+            <S.ModalColumn>
+                <S.ModalTitle>사용자 정보</S.ModalTitle>
+                <S.RowFrame>
+                    <S.ColumnFrame>
+                        <p>{`nickname : ${nickname}`}</p>
+                        <p>{`win : ${information.numberOfGames.win}`}</p>
+                        <p>{`lose : ${information.numberOfGames.lose}`}</p>
+                        <p>{`rate : ${(information.numberOfGames.win + information.numberOfGames.lose) / information.numberOfGames.lose}`}</p>
+                    </S.ColumnFrame>
+                    <S.ColumnFrame>
+                        <p>{`const: ${information.report.const}`}</p>
+                        <p>{`time : ${information.report.time}`}</p>
+                    </S.ColumnFrame>
+                </S.RowFrame>
+            </S.ModalColumn>
+            <Button onClick={onClick}>
+                닫기
+            </Button>
         </Modal>
     )
 }
