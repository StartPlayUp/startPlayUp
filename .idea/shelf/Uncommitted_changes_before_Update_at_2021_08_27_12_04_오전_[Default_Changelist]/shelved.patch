Index: frontend/src/Routes/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useContext, useState} from \"react\";\nimport {UserContext} from \"../LoginStore\";\nimport {Route, Switch, useHistory} from \"react-router-dom\";\nimport LoginPageContainer from \"Container/LoginPageContainer\";\nimport GlobalContainer from \"Container/GlobalContainer\";\nimport ChatComponent from \"Component/ChatComponent\";\nimport RockPaperScissors from \"Component/GameComponent/RockPaperScissors\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MineSearch from \"Container/GameContainer/MineSearch\";\nimport Yut from \"Container/GameContainer/Yut/Yut\";\nimport Yacht from \"Container/GameContainer/Yacht/Yacht\";\nimport {PeerStore} from \"./peerStore\";\nimport AVALON_BETA from \"../Component/GameComponent/AVALON_BETA/AVALON_BETA\";\nimport messageButtonImage from \"images/blue-message.png\";\nimport View from \"../Component/GameComponent/AVALON_BETA/View\";\nimport {createGlobalStyle} from \"styled-components\";\nimport {LoginApp} from \"Component/WebComponent/WebPage\";\nimport {AuthStore} from \"Component/WebComponent/Login/LoginFrame/Auth/AuthContext\";\nimport WebMain from '../Component/WebComponent/WebPage/WebFrame/webBody'\nimport WaitingRoom from \"../Component/WebComponent/WebPage/WebFrame/waitingRoom\";\n\nconst GamePage = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 10px;\n`;\n\nconst StyleDiv = styled.div`\n  display: flex;\n  background-color: #e0e3da;\n  justify-content: center;\n  flex-direction: row;\n  width: 100%;\n  min-height: 100vh;\n`;\nconst AVALON_STYLE = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  background-color: inherit;\n`;\nconst AVALON_Global = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #e0e3da;\n    background-image: url('https://www.transparenttextures.com/patterns/45-degree-fabric-light.png');\n  }\n\n  div {\n    width: auto;\n    height: auto;\n    color: black;\n  }\n`;\nconst AVALON_GAME = styled.div`\n  display: flex;\n  width: 70%;\n  height: 90%;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n`;\nconst AVALON_CHAT = styled.div`\n  display: flex;\n  width: 30%;\n  height: 100%;\n  justify-content: flex-end;\n`;\n\nconst CHAT_STYLE = styled.div`\n  display: flex;\n  flex-basis: 30%;\n  flex-direction: row;\n  justify-content: flex-end;\n`;\n\nexport const CHAT_SHOW_BUTTON_STYLE = styled.button`\n  width: 40px;\n  height: 40px;\n  background-color: rgb(0, 0, 0, 0);\n  background-size: contain;\n  background-image: url(${messageButtonImage});\n  border-radius: 100%;\n`;\n\nexport const CHAT_SHOW_DIV_STYLE = styled.div`\n  position: absolute;\n  z-index: 100;\n  top: 0;\n  right: 0;\n  margin: 8px 20px 0px 0px;\n  width: 32px;\n  height: 32px;\n`;\n\nconst FLEX_DIV = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nexport const buttonGlobalHover = createGlobalStyle`\n  button {\n    font-size: 14px;\n    color: #ffffff;\n    background-color: #a593e0;\n    border-radius: 2px;\n    border: 0;\n    padding: 10px;\n    text-decoration: none;\n    transition: all 0.5s;\n\n    &:hover {\n      background-color: green;\n    }\n  }\n`\nconst TemporaryMain = () => {\n    const history = useHistory();\n    return (\n        <div>\n            <button onClick={() => history.push(\"/RockPaperScissors\")}>\n                RockPaperScissors\n            </button>\n            <button onClick={() => history.push(\"/MineSearch\")}>MineSearch</button>\n            <button onClick={() => history.push(\"/Yut\")}>Yut</button>\n            <button onClick={() => history.push(\"/Yacht\")}>Yacht</button>\n            <button onClick={() => history.push(\"/AVALON\")}>AVALON</button>\n        </div>\n    );\n};\n\nconst app = () => {\n    //const { isAuthenticated } = useContext(UserContext);\n    const {checkAuth} = useContext(AuthStore)\n    const [chatShow, setChatShow] = useState(true);\n    const [chatList, setChatList] = useState([]);\n    const chatOnClickHandler = () => {\n        setChatShow((prev) => !prev);\n    };\n\n    return (\n        <>\n\n            <BrowserRouter>\n                {/* 원래 코드 주석 처리 ( 로그인 표시 X) */}\n                <Route path=\"/\" component={GlobalContainer}/>\n                {/* <Route exact path=\"/\" component={LoginPageContainer} /> */}\n                <Route exact path=\"/\" component={LoginApp}/>\n                {checkAuth && (\n\n                    <Switch>\n                        <Route exact path=\"/main\" component={WebMain}/>\n                        <Route path={'/waitingRoom'} render={() => (\n                            <WaitingRoom\n                                chatList={chatList}\n                                chatShow={chatShow}\n                                setChatList={setChatList}\n                                handler={chatOnClickHandler}\n                                history={history}\n                            />\n                        )}/>\n                    </Switch>\n\n                )}\n\n                {checkAuth && (\n                    <Route\n                        exact\n                        path=\"/RockPaperScissors\"\n                        render={() => (\n                            <GamePage>\n                                <PeerStore>\n                                    <RockPaperScissors/>\n                                    <ChatComponent/>\n                                </PeerStore>\n                            </GamePage>\n                        )}\n                    />\n                )}\n                {checkAuth && (\n                    <Route\n                        exact\n                        path=\"/MineSearch\"\n                        render={() => (\n                            <GamePage>\n                                <PeerStore>\n                                    <MineSearch/>\n                                </PeerStore>\n                            </GamePage>\n                        )}\n                    />\n                )}\n                {checkAuth && (\n                    <Route\n                        exact\n                        path=\"/Yut\"\n                        render={() => (\n                            <GamePage>\n                                <PeerStore>\n                                    <Yut/>\n                                    {chatShow && (\n                                        <ChatComponent\n                                            chatList={chatList}\n                                            setChatList={setChatList}\n                                            width={500}\n                                        />\n                                    )}\n                                    <CHAT_SHOW_DIV_STYLE>\n                                        <CHAT_SHOW_BUTTON_STYLE onClick={chatOnClickHandler}/>\n                                    </CHAT_SHOW_DIV_STYLE>\n                                </PeerStore>\n                            </GamePage>\n                        )}\n                    />\n                )}\n                {checkAuth && (\n                    <Route\n                        exact\n                        path=\"/Yacht\"\n                        render={() => (\n                            <GamePage>\n                                <PeerStore>\n                                    <StyleDiv>\n                                        <Yacht/>\n                                    </StyleDiv>\n                                    {chatShow && (\n                                        <ChatComponent\n                                            chatList={chatList}\n                                            setChatList={setChatList}\n                                        />\n                                    )}\n                                    <CHAT_SHOW_DIV_STYLE>\n                                        <CHAT_SHOW_BUTTON_STYLE onClick={chatOnClickHandler}/>\n                                    </CHAT_SHOW_DIV_STYLE>\n                                </PeerStore>\n                            </GamePage>\n                        )}\n                    />\n                )}\n                {checkAuth && (\n                    <Route\n                        exact\n                        path=\"/AVALON\"\n                        render={() => (\n                            <GamePage>\n                                <PeerStore>\n                                    <StyleDiv>\n                                        <AVALON_Global/>\n                                        <AVALON_BETA/>\n                                    </StyleDiv>\n                                    {chatShow && (\n                                        <ChatComponent\n                                            chatList={chatList}\n                                            setChatList={setChatList}\n                                            width={320}\n                                        />\n                                    )}\n                                    <CHAT_SHOW_DIV_STYLE>\n                                        <CHAT_SHOW_BUTTON_STYLE onClick={chatOnClickHandler}/>\n                                    </CHAT_SHOW_DIV_STYLE>\n                                    {/* <AVALON_STYLE>\n                  <AVALON_Global />\n                  <AVALON_GAME>\n                    <AVALON_BETA />\n                  </AVALON_GAME>\n                  <AVALON_CHAT>\n                    {chatShow && (\n                      <ChatComponent\n                        chatList={chatList}\n                        setChatList={setChatList}\n                        width={300}\n                      />\n                    )}\n                    <CHAT_SHOW_DIV_STYLE>\n                      <CHAT_SHOW_BUTTON_STYLE onClick={chatOnClickHandler} />\n                    </CHAT_SHOW_DIV_STYLE>\n                  </AVALON_CHAT>\n                </AVALON_STYLE> */}\n                                </PeerStore>\n                            </GamePage>\n                        )}\n                    />\n                )}\n            </BrowserRouter>\n        </>\n    );\n};\nexport default app;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Routes/index.js b/frontend/src/Routes/index.js
--- a/frontend/src/Routes/index.js	(revision 1e6363b48ea0f7f25d700914d44009bea6f5ba2e)
+++ b/frontend/src/Routes/index.js	(date 1629989555491)
@@ -104,22 +104,7 @@
   display: flex;
   justify-content: space-around;
 `;
-export const buttonGlobalHover = createGlobalStyle`
-  button {
-    font-size: 14px;
-    color: #ffffff;
-    background-color: #a593e0;
-    border-radius: 2px;
-    border: 0;
-    padding: 10px;
-    text-decoration: none;
-    transition: all 0.5s;
 
-    &:hover {
-      background-color: green;
-    }
-  }
-`
 const TemporaryMain = () => {
     const history = useHistory();
     return (
Index: frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useState} from 'react';\nimport WebHeader from './webHeader';\nimport FOOTER from \"./webFooter\";\nimport {useLocation} from 'react-router-dom';\n//import ChatComponent from '../../ChatFrame/frontend/src/Component/ChatComponent'\n//import {Store} from '../../ChatFrame/frontend/src/store'\nimport {\n    BodyFrame,\n    Button,\n    ButtonArea,\n    ChattingList,\n    MainList,\n    Room,\n    Title,\n    TitleSpan,\n    UserList,\n    LeftButtonsArea,\n    RightButtonsArea\n} from \"../Style/WaitingRoomStyle\";\nimport ChatComponent from \"../../../ChatComponent\";\nimport {PeerStore} from \"../../../../Routes/peerStore\";\nimport {buttonGlobalHover, CHAT_SHOW_BUTTON_STYLE, CHAT_SHOW_DIV_STYLE} from \"../../../../Routes\";\nimport {useHistory} from \"react-router\";\n\n\nconst WaitingRoom = ({chatList, chatShow, setChatList}) => {\n    const location = useLocation();\n    const input = location.state.input;\n    const game = location.state.game;\n    const history = useHistory()\n    const gameStart = () => {\n        switch (game) {\n            case 'Yut':\n                history.push('/Yut');\n                break;\n            case 'YachtDice':\n                history.push('/Yacht');\n                break;\n            case 'AVALON':\n                history.push('/AVALON');\n                break;\n            case 'MineSearch':\n                history.push('/MineSearch');\n                break;\n            default:\n                alert('error');\n        }\n    }\n    const [user, setUsers] = useState([]);\n    return (\n        <div>\n            <BodyFrame>\n                {/*<buttonGlobalHover/>*/}\n                <Room>\n                    <Title>\n                        <TitleSpan fontSize={\"18px\"} color={\"red\"}>{game}</TitleSpan>\n                        <TitleSpan fontSize={\"22px\"} color={\"black\"}>{input}</TitleSpan>\n                    </Title>\n                    <hr/>\n                    <ButtonArea>\n                        <LeftButtonsArea>\n                            <Button onClick={gameStart}>시작</Button>\n                            <Button>준비</Button>\n                        </LeftButtonsArea>\n                        <RightButtonsArea>\n                            <Button margin={'0'} onClick={() => history.push('/main')}>나가기</Button>\n                        </RightButtonsArea>\n                    </ButtonArea>\n                    <MainList>\n                        <UserList>\n                            <h3>유저 목록 입니다.</h3>\n                        </UserList>\n                        <ChattingList>\n                            <PeerStore>\n                                {chatShow && (\n                                    <ChatComponent\n                                        chatList={chatList}\n                                        setChatList={setChatList}\n                                        width={500}\n                                    />\n                                )}\n                                {/*<CHAT_SHOW_DIV_STYLE>*/}\n                                {/*    <CHAT_SHOW_BUTTON_STYLE onClick={chatOnClickHandler} />*/}\n                                {/*</CHAT_SHOW_DIV_STYLE>*/}\n                            </PeerStore>\n                        </ChattingList>\n                    </MainList>\n                </Room>\n                {/*<FOOTER/>*/}\n            </BodyFrame>\n        </div>\n    )\n}\nexport default WaitingRoom;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js	(revision 1e6363b48ea0f7f25d700914d44009bea6f5ba2e)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/waitingRoom.js	(date 1629989583586)
@@ -19,7 +19,6 @@
 } from "../Style/WaitingRoomStyle";
 import ChatComponent from "../../../ChatComponent";
 import {PeerStore} from "../../../../Routes/peerStore";
-import {buttonGlobalHover, CHAT_SHOW_BUTTON_STYLE, CHAT_SHOW_DIV_STYLE} from "../../../../Routes";
 import {useHistory} from "react-router";
 
 
@@ -50,7 +49,6 @@
     return (
         <div>
             <BodyFrame>
-                {/*<buttonGlobalHover/>*/}
                 <Room>
                     <Title>
                         <TitleSpan fontSize={"18px"} color={"red"}>{game}</TitleSpan>
Index: frontend/src/Component/WebComponent/WebPage/WebFrame/createRoom.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Modal,\n  LoginMid,\n  LoginModal,\n  Close,\n  ModalContents,\n  Title,\n  Games,\n  SelectGame,\n  RoomTitle,\n  Input,\n  SelectPrivate,\n  Select,\n  Footer,\n  ResultButton,\n} from \"../Style/CreateRoomStyle\";\nimport {buttonGlobalHover} from \"../../../../Routes\";\n\nconst CreateRoom = ({ isOpen, close }) => {\n  let history = useHistory();\n  const [input, setInput] = useState(\"\");\n  const [game, setGame] = useState(\"Yutnori\");\n  const [checked, setChecked] = useState(false);\n\n  const onChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const onGameChange = (e) => {\n    setGame(e.target.value);\n  };\n\n  const onCheckChange = () => {\n    setChecked(!checked);\n  };\n\n  return (\n    <>\n      {isOpen ? (\n        <Modal>\n          {/*<buttonGlobalHover/>*/}\n          <LoginMid>\n            <LoginModal>\n              <Close onClick={close}>&times;</Close>\n              <ModalContents onClick={isOpen}>\n                <Title>StartPlayUp</Title>\n                <RoomTitle>\n                  <span>제목 : &nbsp; </span>\n                  <Input\n                    type=\"text\"\n                    maxLength=\"25\"\n                    width=\"200px\"\n                    value={input}\n                    onChange={onChange}\n                  />\n                </RoomTitle>\n                <RoomTitle>\n                  <span>암호 : &nbsp; </span>\n                  <input\n                    type=\"checkbox\"\n                    checked={checked}\n                    onChange={onCheckChange}\n                  />\n                  {checked ? (\n                    <Input type=\"password\" maxLength=\"10\" width=\"180px\" />\n                  ) : null}\n                </RoomTitle>\n                <SelectGame>\n                  <Select value={game} onChange={onGameChange}>\n                    <Games value={\"Yut\"}>윷놀이</Games>\n                    <Games value={\"YachtDice\"}>요트 다이스</Games>\n                    <Games value={\"AVALON\"}>아발론</Games>\n                    <Games value={\"MineSearch\"}>지뢰 찾기</Games>\n                  </Select>\n                </SelectGame>\n                {/*<SelectPrivate>*/}\n                {/*  <span>관전허용 : </span>*/}\n                {/*  <input type=\"checkbox\" />*/}\n                {/*</SelectPrivate>*/}\n              </ModalContents>\n              <Footer>\n                {/*<ResultButton color='#B8B8B0'>취소</ResultButton>*/}\n                <ResultButton\n                  color=\"#A593E0\"\n                  onClick={() => {\n                    history.push({\n                      pathname: \"/waitingRoom\",\n                      state: {\n                        input: input,\n                        game: game,\n                      },\n                    });\n                  }}\n                >\n                  확인\n                </ResultButton>\n              </Footer>\n            </LoginModal>\n          </LoginMid>\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nexport default CreateRoom;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/createRoom.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/createRoom.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/createRoom.js	(revision 1e6363b48ea0f7f25d700914d44009bea6f5ba2e)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/createRoom.js	(date 1629989583597)
@@ -17,7 +17,6 @@
   Footer,
   ResultButton,
 } from "../Style/CreateRoomStyle";
-import {buttonGlobalHover} from "../../../../Routes";
 
 const CreateRoom = ({ isOpen, close }) => {
   let history = useHistory();
@@ -41,7 +40,6 @@
     <>
       {isOpen ? (
         <Modal>
-          {/*<buttonGlobalHover/>*/}
           <LoginMid>
             <LoginModal>
               <Close onClick={close}>&times;</Close>
Index: frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect, useState} from \"react\";\nimport FOOTER from \"./webFooter\";\nimport HEADER from \"./webHeader\";\nimport CreateButton from \"./CreateButton\";\n\nimport {\n  BodyFrame,\n  BodyCenter,\n  RoomFrame,\n  UserList,\n  Users,\n  ButtonArea,\n} from \"../Style/WebFrameStyle\";\nimport {buttonGlobalHover} from \"../../../../Routes\";\nimport axios from \"axios\";\n\nconst BODY = ({ location, history }) => {\n  console.log(location);\n  console.log(history);\n  const [gameList,setGameList] = useState([])\n\n  useEffect(() => {\n    axios.post('localhost:4000/getRooms')\n        .then(function (result) {\n          console.log('get useEffect')\n          const {roomList,success} = result.data\n          success && setGameList(roomList)\n        })\n        .catch(function (error) {\n          console.error(\"error : \", error);\n        });\n  }, []);\n\n  return (\n    <>\n      {/* <HEADER/> */}\n      <BodyFrame>\n        {/*<buttonGlobalHover/>*/}\n        <BodyCenter>\n          <ButtonArea>\n            <CreateButton type={\"submit\"} />\n          </ButtonArea>\n          <RoomFrame>\n            <UserList color={\"#566270\"} background={\"white\"}>\n              <Users width={\"5vw\"}>방 번호</Users>\n              <Users width={\"15vw\"}>게임 이름</Users>\n              <Users width={\"30vw\"}>방 제목</Users>\n              <Users width={\"15vw\"}>방 사용자</Users>\n              <Users width={\"5vw\"}>인원</Users>\n            </UserList>\n            <hr />\n            <UserList onClick={() => history.push(\"/waitingRoom\")}>\n              <Users width={\"5vw\"}>1</Users>\n              <Users width={\"15vw\"}>Yut</Users>\n              <Users width={\"30vw\"}>윷놀이 ㄱ ㄱ</Users>\n              <Users width={\"15vw\"}>Jang</Users>\n              <Users width={\"5vw\"}>3</Users>\n            </UserList>\n            <hr />\n            <UserList onClick={() => history.push(\"/waitingRoom\")}>\n              <Users width={\"5vw\"}>1</Users>\n              <Users width={\"15vw\"}>Mafia</Users>\n              <Users width={\"30vw\"}>마피아 빠르게 한판 ㄱ ㄱ</Users>\n              <Users width={\"15vw\"}>Jang</Users>\n              <Users width={\"5vw\"}>3</Users>\n            </UserList>\n            <UserList>\n              {\n                gameList.map(function(rooms,index){\n                  console.log('rooms' + rooms)\n                })\n              }\n            </UserList>\n            <hr />\n          </RoomFrame>\n        </BodyCenter>\n      </BodyFrame>\n    </>\n  );\n};\n\nexport default BODY;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js b/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js
--- a/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js	(revision 1e6363b48ea0f7f25d700914d44009bea6f5ba2e)
+++ b/frontend/src/Component/WebComponent/WebPage/WebFrame/webBody.js	(date 1629989793540)
@@ -1,6 +1,5 @@
 import React, {useEffect, useState} from "react";
-import FOOTER from "./webFooter";
-import HEADER from "./webHeader";
+
 import CreateButton from "./CreateButton";
 
 import {
@@ -11,7 +10,6 @@
   Users,
   ButtonArea,
 } from "../Style/WebFrameStyle";
-import {buttonGlobalHover} from "../../../../Routes";
 import axios from "axios";
 
 const BODY = ({ location, history }) => {
Index: frontend/src/Container/GlobalContainer.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { memo } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport reset from \"styled-reset\";\nimport thunderstorm from \"../image/thunderstorm.jpg\";\nimport FOOTER from \"../Component/WebComponent/WebPage/WebFrame/webFooter\";\nimport HEADER from \"../Component/WebComponent/WebPage/WebFrame/webHeader\";\nimport Snow from './WebBackGroundContainer/Snow/FallingSnow';\n\nconst GlobalStyles = createGlobalStyle`\n     ${reset};\n     *:focus { outline:none; }\n     body{\n         //font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n         //font-size: 14px;\n         background-color: #E5E5E5; // 카카오톡 배경\n         /* background-image:url(${thunderstorm}) */\n     }\n     /* img{\n      width:20px;\n      height:20px;\n     } */\n     html{\n      //overflow:hidden;\n     }\n `;\n\n\nconst Global = () => {\n  console.log(\"debug Global rerender\");\n  return (\n    <>\n      <HEADER />\n      {/* <Snow /> */}\n      <GlobalStyles>\n      </GlobalStyles>\n    </>\n  );\n}\n\nexport default Global;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/Container/GlobalContainer.jsx b/frontend/src/Container/GlobalContainer.jsx
--- a/frontend/src/Container/GlobalContainer.jsx	(revision 1e6363b48ea0f7f25d700914d44009bea6f5ba2e)
+++ b/frontend/src/Container/GlobalContainer.jsx	(date 1629989555497)
@@ -23,6 +23,20 @@
      html{
       //overflow:hidden;
      }
+     button {
+       font-size: 14px;
+       color: #ffffff;
+       background-color: #a593e0;
+       border-radius: 2px;
+       border: 0;
+       padding: 10px;
+       text-decoration: none;
+       transition: all 0.5s;
+
+       button:hover {
+         background-color: green;
+       }
+     }
  `;
 
 
